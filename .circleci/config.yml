# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference/
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:

  build:
      # Specify the execution environment. You can specify an image from Dockerhub, or use one of our Convenience Images from CircleCI's Developer Hub.
      # See: https://circleci.com/docs/configuration-reference/#docker-machine-macos-windows-executor
      
      # working_directory: ~/project
      docker:
        - image: cimg/base:stable
      # Add steps to the job
      # See: https://circleci.com/docs/configuration-reference/#steps
      steps:
        - checkout
      # - run: pip install -r requirements.txt
        - run:
              name: "build step 1"
              command: "echo build 1: construindo a aplicação..."

  test:
      # working_directory: ~/project
      docker:
        - image: cimg/base:stable
      steps:
        - checkout
        # - run: python test.py
        - run:
              name: "test1: unit-tests"
              command: "echo unit-tests: rodando testes unitários..."
              # command: "pytest tests/unit"
        - run:
              name: "test2: integration-tests"
              command: "echo integration-tests: rodando testes de integração..."
              # command: "pytest tests/integration"
        - run:
              name: "test3: system-tests"
              command: "echo system-tests: rodando testes de sistema..."
              # command: "pytest tests/system"

  delivery:
    # working_directory: ~/project
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - run:
                  name: "delivery step 1"
                  command: "echo delivery 1: entregando uma nova versão (release)!"
                  
  deploy:
    # working_directory: ~/project
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - when:
          condition:
            equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run:
                  name: "deploy step 1"
                  command: "echo deploy 1: implantando a nova versão (stable)!"
                  # command: deploy-dev.sh
                  # when: manual

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:

  build-and-test:

    jobs:

      - build:
          filters:
            branches:
              ignore:
                - main
                - master
              
      - test:
          filters:
            branches:
              ignore:
                - main
                - master

  delivery:

    jobs:

      - build:
          filters:
            branches:
              only:
                - master

      - test:
          filters:
            branches:
              only:
                - master

      - delivery:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master

  deploy:

    jobs:

      - build:
          filters:
            branches:
              only:
                - main

      - test:
          filters:
            branches:
              only:
                - main

      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - main
